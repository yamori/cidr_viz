# Welcome to Serverless!
#
# This file is the main config file for your service.
# It's very minimal at this point and uses default values.
# You can always add more config options for more control.
# We've included some commented out config examples here.
# Just uncomment any of them to get that config option.
#
# For full config options, check the docs:
#    docs.serverless.com
#
# Happy Coding!

service: cidrizer-lambda
app: cidrizer-lambda
#tenant: your-tenant-name

# You can pin your service to only deploy with a specific Serverless version
# Check out our docs for more details
# frameworkVersion: "=X.X.X"

provider:
  name: aws
  runtime: nodejs10.x
  stage: dev
  region: us-east-1 # tried eu-west-2 previously, but issues with Cert Manager
  memorySize: 256 # Default is 1024, 256 seems to work.

# you can add statements to the Lambda function's IAM Role here
#  iamRoleStatements:
#    - Effect: "Allow"
#      Action:
#        - "s3:ListBucket"
#      Resource: { "Fn::Join" : ["", ["arn:aws:s3:::", { "Ref" : "ServerlessDeploymentBucket" } ] ]  }
#    - Effect: "Allow"
#      Action:
#        - "s3:PutObject"
#      Resource:
#        Fn::Join:
#          - ""
#          - - "arn:aws:s3:::"
#            - "Ref" : "ServerlessDeploymentBucket"
#            - "/*"

# you can define service wide environment variables here
#  environment:
#    variable1: value1

# you can add packaging information here
#package:
#  include:
#    - include-me.js
#    - include-me-dir/**
#  exclude:
#    - exclude-me.js
#    - exclude-me-dir/**

functions:
 app:
  handler: serverless_for_lambda.server
  events: #Define the events that trigger the lambda
   - http: #Define an HTTP endpoint that respond to the / route
       path: /
       method: GET #Define the HTTP methods to be used (GET/POST)
       cors: true
   - http: #Define an HTTP endpoin that respond to any routes
       path: /{proxy+}
       method: GET
       cors: true
   - http: #Define an HTTP endpoint that respond to the / route
       path: /do_cidr/
       method: POST #Define the HTTP methods to be used (GET/POST)
       cors: true
   - http: #Define an HTTP endpoin that respond to any routes
       path: /do_cidr/{proxy+}
       method: POST
       cors: true
